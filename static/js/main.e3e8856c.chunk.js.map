{"version":3,"sources":["ticTacToe.jsx","App.js","index.js"],"names":["styleB","width","height","margin","display","gridTemplate","Board","squares","onClick","style","map","square","i","key","value","Square","className","TicTacToe","useState","Array","fill","board","setBoard","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","boardCopy","id","Home","About","Test","App","basename","to","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"6QAyBA,IAqCMA,EAAS,CACXC,MAAO,OACPC,OAAQ,OACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAGZC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAAZ,OACV,yBAAKC,MAAOT,GACRO,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACR,kBAAC,EAAD,CAAQC,IAAKD,EAAGE,MAAOH,EAAQH,QAAS,kBAAMA,EAAQI,WAK5DG,EAAS,SAAC,GAAD,IAAED,EAAF,EAAEA,MAAQN,EAAV,EAAUA,QAAV,OACX,4BAAQQ,UAAU,cAAcR,QAASA,GACpCM,IAKMG,EA5DG,WAAM,MAEMC,mBAASC,MAAM,GAAGC,KAAK,OAF7B,mBAEbC,EAFa,KAENC,EAFM,OAIUJ,oBAAS,GAJnB,mBAIbK,EAJa,KAIJC,EAJI,KAMdC,EA1BV,SAAyBlB,GAWrB,IAVA,IAAMmB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAd,EAAI,EAAGA,EAAIc,EAAMC,OAAQf,IAAK,CAAC,IAAD,cACnBc,EAAMd,GADa,GAC9BgB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIvB,EAAQqB,IAAMrB,EAAQqB,KAAOrB,EAAQsB,IAAMtB,EAAQqB,KAAOrB,EAAQuB,GACpE,OAAOvB,EAAQqB,GAGnB,OAAO,KASQG,CAAgBV,GAe/B,OACI,6BACI,wBAAIL,UAAU,aAAd,eACA,yBAAKA,UAAU,oBACf,kBAAC,EAAD,CAAOT,QAASc,EAAOb,QAjBf,SAAAI,GAClB,IAAMoB,EAAS,YAAOX,GAEhBI,GAAUO,EAAUpB,KAExBoB,EAAUpB,GAAKW,EAAU,IAAM,IAE/BD,EAASU,GAETR,GAAYD,OASN,yBAAKP,UAAU,kBACT,2BAAIS,EAAS,WAAaA,EAAS,iBAAmBF,EAAU,IAAM,MACtE,4BAAQU,GAAG,eAAezB,QAAS,kBAAMc,EAASH,MAAM,GAAGC,KAAK,SAAhE,kBC9BhB,IAAMc,EAAO,kBAAM,6BAAK,yCAClBC,EAAQ,kBAAM,6BAAK,uCACnBC,EAAO,kBAAM,6BAAK,kBAAC,EAAD,QAETC,EAtBf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACrB,6BACC,4BACC,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,WAEL,6BACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC,kBAAC,IAAD,CAAOO,KAAK,SAASC,UAAWP,IAChC,kBAAC,IAAD,CAAOM,KAAK,QAAQC,UAAWN,OCXpCO,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.e3e8856c.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n// function to check winner \n// array of all possible wins\n// iterate through the board to see matching letter \nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\nconst TicTacToe = () => {\n  // hook to set the board with 9 elements\n    const [board, setBoard] = useState(Array(9).fill(null));\n  // hook to change player's turn\n    const [xIsNext, setXisNext] = useState(true);\n  // check the winner \n    const winner = calculateWinner(board);\n\nconst handleClick = i => {\n  const boardCopy = [...board];\n  // If user click an occupied square or if game is won, return\n    if (winner || boardCopy[i]) return;\n    // Put an X or an O in the clicked square\n    boardCopy[i] = xIsNext ? 'X' : 'O';\n    // re-render the board\n    setBoard(boardCopy);\n    // change player's turn\n    setXisNext(!xIsNext);\n}\n   // if there is a winner render winner else next player's turn\n   // start new game will reset the board with 9 elements\n    return (\n        <div>\n            <h1 className=\"gameTitle\">Tic Tac Toe</h1>\n            <div className=\"ticTac-container\">\n            <Board squares={board} onClick={handleClick} />\n          <div className=\"ticTacToeStyle\">\n                <p>{winner ? 'Winner: ' + winner : 'Next Player: ' + (xIsNext ? 'X' : 'O')}</p>\n                <button id='ticTacButton' onClick={() => setBoard(Array(9).fill(null))}>Start Game</button>\n          </div>  \n          </div>\n        </div>\n    )\n\n}\n\n// inline styling for the board \nconst styleB = {\n    width: '16em',\n    height: '16em',\n    margin: '0 auto',\n    display: 'grid',\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\n}\n\nconst Board = ({ squares, onClick}) => (\n    <div style={styleB}>\n       {squares.map((square, i) => (\n            <Square key={i} value={square} onClick={() => onClick(i)} />\n        ))}\n    </div>\n)\n\nconst Square = ({value , onClick}) => (\n    <button className=\"buttonStyle\" onClick={onClick}>\n        {value}\n    </button>\n);\n\n\nexport default TicTacToe;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport TicTacToe from \"./ticTacToe.jsx\"\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n    <div>\n     <ul>\n      <li><Link to=\"/\">HomeE</Link></li>\n      <li><Link to=\"/about\">About</Link></li>\n      <li><Link to=\"/test\">About</Link></li>\n     </ul>\n     <hr />\n     <Route exact path=\"/\" component={Home} />\n     <Route path=\"/about\" component={About} />\n     <Route path=\"/test\" component={Test} />\n    </div>\n   </HashRouter>\n  );\n\n}\nconst Home = () => <div><h2>HomeEEE</h2></div>\nconst About = () => <div><h2>About</h2></div>\nconst Test = () => <div><TicTacToe /></div>\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}